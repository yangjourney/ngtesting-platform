<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ngtesting.platform.dao.CustomFieldDao" >

    <select id="list" resultType="TstCustomField">
        SELECT * FROM TstCustomField o
        WHERE o.orgId=#{orgId}

        AND o.disabled!=TRUE AND o.deleted!=TRUE
        ORDER BY ordr ASC
    </select>

    <select id="listForCaseByProject" resultMap="customFieldMap">
        (SELECT o.id, o.code, o.label, o.myColumn, o.descr, o.applyTo, o.type,
          o.rows, o.format, o.ordr, o.required

        FROM TstCustomField o
        WHERE o.orgId = #{orgId} AND o.global = TRUE AND o.applyTo = #{applyTo}

        AND o.disabled != TRUE AND o.deleted != TRUE
        ORDER BY ordr ASC)

        UNION

        (SELECT o.id, o.code, o.label, o.myColumn, o.descr, o.applyTo, o.type,
          o.rows, o.format, o.ordr, o.required

        FROM TstCustomField o
        LEFT JOIN TstCustomFieldProjectRelation r ON r.customFieldId = o.id
        WHERE o.orgId = #{orgId} AND o.global != TRUE  AND o.applyTo = #{applyTo} AND r.projectId = #{projectId}

        AND o.disabled != TRUE AND o.deleted != TRUE
        ORDER BY ordr ASC)
    </select>

    <select id="get" resultType="TstCustomField">
        SELECT * FROM TstCustomField o

        WHERE o.id = #{id}
        <if test="orgId != null">
            AND o.orgId=#{orgId}
        </if>
    </select>
    <select id="getDetail" resultMap="customFieldMap">
        SELECT * FROM TstCustomField o
        WHERE o.id = #{id}
        <if test="orgId != null">
            AND o.orgId=#{orgId}
        </if>
    </select>

    <insert id="save" parameterType="TstCustomField" useGeneratedKeys="true" keyProperty="id">
        insert into TstCustomField
        (label,code,myColumn,descr,applyTo,`type`,`rows`,format,required,`global`,
          orgId,ordr,buildIn,deleted,disabled,createTime)
        values
        (#{label},#{code},#{myColumn},#{descr},#{applyTo},#{type},#{rows},#{format},#{required},#{global},
          #{orgId},#{ordr},#{buildIn},FALSE,FALSE,NOW())
    </insert>

    <update id="update" parameterType="TstCustomField">
        UPDATE TstCustomField
        SET label=#{label},descr=#{descr},applyTo=#{applyTo},type=#{type},rows=#{rows},
            format=#{format},required=#{required},global=#{global},

        orgId=#{orgId},`global`=#{global},required=#{required},
        disabled=#{disabled}, updateTime=NOW()

        WHERE id=#{id} AND orgId=#{orgId}
    </update>

    <delete id="delete">
        UPDATE TstCustomField
        SET deleted=TRUE, updateTime=NOW()
        WHERE id=#{id} AND orgId=#{orgId}
    </delete>

    <select id="getPrev" resultType="TstCustomField">
        <![CDATA[
            SELECT * FROM TstCustomField o
            WHERE o.ordr < #{ordr} AND o.orgId = #{orgId}
            AND o.deleted != TRUE
            ORDER BY o.ordr DESC LIMIT 1
        ]]>
    </select>

    <select id="getNext" resultType="TstCustomField">
        <![CDATA[
            SELECT * FROM TstCustomField o
            WHERE o.ordr > #{ordr} AND o.orgId = #{orgId}
            AND o.deleted != TRUE
            ORDER BY o.ordr ASC LIMIT 1
        ]]>
    </select>

    <update id="setOrder">
        UPDATE TstCustomField
        SET ordr=#{ordr}, updateTime=NOW()
        WHERE id=#{id} AND orgId=#{orgId}
    </update>


    <select id="getLastUnusedColumn" resultType="String">
        select cf.myColumn from TstCustomField cf

        where cf.orgId = #{orgId}
        and cf.deleted != TRUE and cf.disabled != TRUE

        order by cf.myColumn asc
    </select>

    <select id="getMaxOrdrNumb" resultType="Integer">
        select max(ordr) from TstCustomField o
        where o.orgId=#{orgId}
        and o.deleted != true
        and o.disabled != true
    </select>

    <resultMap id="customFieldMap" type="TstCustomField" autoMapping="true">
        <id column="id" property="id"/>

        <collection property="options" select="com.ngtesting.platform.dao.CustomFieldOptionDao.getByFieldId"
                    column="{id=id}">
        </collection>
    </resultMap>

</mapper>
